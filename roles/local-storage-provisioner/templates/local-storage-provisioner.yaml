---
# Only valid for Kubernetes 1.9+
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-kafkabroker
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-zookeeperdata
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-zookeeperlog
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
# Source: provisioner/templates/provisioner.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: local-provisioner-config 
  namespace: default 
data:
  useNodeNameOnly: "true"
  storageClassMap: |     
    local-storage-kafkabroker:
       hostDir: /mnt/local-storage-kafkabroker
       mountDir:  /mnt/local-storage-kafkabroker 
    local-storage-zookeeperdata:
       hostDir: /mnt/local-storage-zookeeperdata
       mountDir:  /mnt/local-storage-zookeeperdata
    local-storage-zookeeperlog:
       hostDir: /mnt/local-storage-zookeeperlog
       mountDir:  /mnt/local-storage-zookeeperlog
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: local-volume-provisioner
  namespace: default
  labels:
    app: local-volume-provisioner
spec:
  selector:
    matchLabels:
      app: local-volume-provisioner 
  template:
    metadata:
      labels:
        app: local-volume-provisioner
    spec:
      serviceAccountName: local-storage-admin
      containers:
        - image: "quay.io/external_storage/local-volume-provisioner:v2.2.0"
          imagePullPolicy: "IfNotPresent"
          name: provisioner 
          securityContext:
            privileged: true
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /etc/provisioner/config 
              name: provisioner-config
              readOnly: true             
            - mountPath:  /mnt/local-storage-kafkabroker 
              name: local-storage-kafkabroker
            - mountPath:  /mnt/local-storage-zookeeperdata
              name: local-storage-zookeeperdata
            - mountPath:  /mnt/local-storage-zookeeperlog
              name: local-storage-zookeeperlog
      volumes:
        - name: provisioner-config
          configMap:
            name: local-provisioner-config         
        - name: local-storage-kafkabroker
          hostPath:
            path: /mnt/local-storage-kafkabroker
        - name: local-storage-zookeeperdata
          hostPath:
            path: /mnt/local-storage-zookeeperdata
        - name: local-storage-zookeeperlog
          hostPath:
            path: /mnt/local-storage-zookeeperlog
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-storage-admin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-storage-provisioner-pv-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: local-storage-admin
  namespace: default
roleRef:
  kind: ClusterRole
  name: system:persistent-volume-provisioner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-storage-provisioner-node-clusterrole
  namespace: default
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-storage-provisioner-node-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: local-storage-admin
  namespace: default
roleRef:
  kind: ClusterRole
  name: local-storage-provisioner-node-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: local-volume-provisioner
  namespace: default 
  labels:
    app: local-volume-provisioner
spec:
  type: ClusterIP
  selector:
    app: local-volume-provisioner
  ports:
  - name: metrics
    port: 8080
    protocol: TCP